#include <stdio.h>

__global__ 
void farfield(float* result, float3* obs_pts, float3* obs_ns,
    float3* src_pts, float3* src_ns, float G, float nu, int n)
{
    const int i = blockIdx.x * blockDim.x + threadIdx.x;
    const int j = blockIdx.y * blockDim.y + threadIdx.y;

    float xx = obs_pts[i].x;
    float xy = obs_pts[i].y;
    float xz = obs_pts[i].z;

    float nx = obs_ns[i].x;
    float ny = obs_ns[i].y;
    float nz = obs_ns[i].z;

    float yx = src_pts[j].x;
    float yy = src_pts[j].y;
    float yz = src_pts[j].z;

    float lx = src_ns[j].x;
    float ly = src_ns[j].y;
    float lz = src_ns[j].z;

    % for d1 in range(3):
    % for d2 in range(3):
    result[i * n * 9 + j * 9 + ${d1} * 3 + ${d2}] = ${kernel[d1][d2]};
    % endfor
    % endfor
}
