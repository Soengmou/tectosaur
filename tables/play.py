import numpy as np
import matplotlib.pyplot as plt
from limit import limit, richardson_limit

# starting_eps = 0.0001
# n_eps = 4
# all_eps = starting_eps * 2.0 ** -np.arange(n_eps)
#
# def take_limits(integrals):
#     out = np.empty(81)
#     remove_divergence = False
#     for i in range(81):
#         out[i] = limit(all_eps, integrals[:, i], remove_divergence)
#     if not remove_divergence:
#         np.testing.assert_almost_equal(out, richardson_limit(2.0, integrals))
#     return out
#
# results = np.load('H2.npy')
#
# limits = np.empty((results.shape[0], results.shape[2]))
# for i in range(results.shape[0]):
#     limits[i,:] = take_limits(results[i,:,:])
#
# L = limits.reshape((8,8,8,81))
# for i in range(81):
#     plt.imshow(L[:,4,:,i], interpolation = 'none')
#     plt.colorbar()
#     plt.show()

data = """-0.8285714285714285 0.000141769111853
-0.8857142857142857 0.000278192651845
-0.4285714285714286 -0.000447725569149
-0.37142857142857144 0.000108414910777
-0.9428571428571428 -0.000127981490075
-0.6000000000000001 -0.000330352720132
-0.7142857142857143 -1.30927269031e-05
-1.0 -1.56233928244e-05
-0.6571428571428571 0.000142474817885
-0.7714285714285715 -0.000239024028152
-0.5428571428571429 -0.000514708235075
-0.48571428571428577 -0.000128347617477
-0.1428571428571429 -0.000226968053885
-0.3142857142857143 -4.27575625413e-05
-0.08571428571428574 -0.000112246511792
-0.2571428571428571 0.000237158704578
0.02857142857142847 -0.000506103804755
0.08571428571428563 -0.000540986668801
-0.20000000000000007 -2.94237825575e-05
0.1428571428571428 0.000159335460753
0.2571428571428571 -7.69094745806e-05
-0.02857142857142858 0.0001197252504
0.3142857142857143 -0.00031420291278
0.19999999999999996 -0.000125960836732
0.4285714285714286 -0.000255656479923
0.37142857142857144 -0.000349801179155
0.48571428571428577 -0.00127947635452
0.5428571428571427 -0.000153665338604
0.5999999999999999 -0.00124230569309
0.7142857142857142 -0.000613244638846
0.657142857142857 -0.00113379956044
0.7714285714285714 -0.000460422752364
0.8285714285714285 0.000379334023403
0.8857142857142857 -9.67062228093e-05
0.9428571428571428 -0.000717120127131
"""

D = np.array([float(v) for v in data.split()]).reshape(-1,2)
D = D[np.argsort(D, axis = 0)[:,0],:]
plt.plot(D[:,0],D[:,1])
plt.show()

